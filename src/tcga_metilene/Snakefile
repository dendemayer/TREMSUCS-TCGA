import os
#configfile: 'config.yaml'

include: "../shared/Snakefile"

#rule all:
#    input:
#        "/scr/dings/PEVO/NEW_downloads_3/TCGA-pipelines/TCGA-CESC_TCGA-HNSC/metilene/metilene_input_table/carboplatn,paclitaxel_cisplatin/male/cutoff_0/threshold_0/summary_for_metilene.tsv"
#breakpoint()
def get_summary_multi_proj(wildcards):
    """
    wildcard structure like:
    ['/scr/dings/PEVO/NEW_downloads_3/TCGA-pipelines', 'TCGA-CESC_TCGA-HNSC',
    'carboplatn,paclitaxel_cisplatin', 'male', 'cutoff_0', 'threshold_0']
    we need every single proj merged table:
    "{output_path}/{project}/metilene/merged_meta_files/meta_info_druglist_merged_drugs_combined.tsv"

    """
    final_list = []
    projects = wildcards[1].split('_')
    for project in projects:
        final_list.append(
                os.path.join(wildcards[0], project, wildcards[1], wildcards[2],
                             wildcards[3], wildcards[4], wildcards[5]))
    return final_list

rule create_summary_table_single_project:
    """
    according to the flag composition the (projects, drugs) and the metadata
    given (dead/alive, female/male) create metilene input tables
    """
    input:
        "{output_path}/{project}/metilene/merged_meta_files/meta_info_druglist_merged_drugs_combined.tsv"
    output:
        "{output_path}/{project}/metilene/metilene_input_table/{drug_combi}/{gender}/{cutoff}/{threshold}/summary_for_metilene.tsv"
    conda:
        "../shared/envs/pandas.yaml"
    script:
        "scripts/create_summary_table.py"

#rule create_summary_table_multi_project:
    #"""
    #according to the flag composition the (projects, drugs) and the metadata
    #given (dead/alive, female/male) create metilene input tables
    #"""
    #input:
        #get_summary_multi_proj
    #output:
        #"{output_path}/{projects}/metilene/metilene_input_table/{drug_combi}/{gender}/{cutoff}/{threshold}/summary_for_metilene.tsv"
    #conda:
        #"../shared/envs/pandas.yaml"
    #script:
        #"scripts/create_summary_table.py"

#rule create_metilene_out:
#    """
#    according to the flag composition the (projects, drugs) and the metadata
#    given (dead/alive, female/male) create metilene input tables
#    """
#    input:
#        "{output_path}/{project}/metilene/metilene_input_table/{drug_combi}/{gender}/{cutoff}/{threshold}/summary_for_metilene.tsv"
#    output:
#        "{output_path}/{project}/metilene/metilene_output/{drug_combi}/{gender}/{cutoff}/{threshold}/summary_for_metilene.tsv"
#    conda:
#        "../shared/envs/pandas.yaml"
#    script:
#        "scripts/create_metilene_out.py"
